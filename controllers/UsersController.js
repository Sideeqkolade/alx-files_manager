/*
@author: Sideeq
Controller
 */
import sha1 from 'sha1';
import { dbClient } from '../utils/db';

class UsersController {
  static async postNew(req, res) {
    // Get the post body from request
    const { email, password } = req.body;

    // check if email and oassword are provided
    if (!email) {
      res.status(400).json({ error: 'Missing email' });
    }
    if (!password) {
      res.status(400).json({ error: 'Missing pssword' });
    }

    // check if email already exists in the database
    const existingUser = await dbClient.usersCollection.findOne({ email });
    if (existingUser) {
      res.status(400).json({ error: 'Already exists' });
    }

    // Hash the password using SHA1
    const hashedPassword = sha1(password);

    // create a new User
    const newUser = {
      email,
      password: hashedPassword,
    };

    // Insert the new user document into users collection
    const result = await dbClient.usersCollection.insertOne(newUser);

    // Return new user with only email and id autogenerated by Mongodb
    const createdUser = {
      email: result.ops[0].email,
      id: result.insertedId,
    };

    return res.status(201).json(createdUser);
  }
}

export default UsersController;
